{"version":3,"sources":["webpack:///./src/pages/paso-01.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","imgName","alt","isMDXComponent"],"mappings":"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","file":"component---src-pages-paso-01-mdx-188997b0612b16f43835.js","sourcesContent":["import React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"C:/Users/SuGuS/Work/gatsbyworkshop/src/components/Layout.js\";\nimport Image from '../components/Image';\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <p>{`Al fin podemos arrancar a hacer nuestro portfolio! 🎉🎊🎉🎊 Empecemos con lo\nprimero, la idea es traernos desde Github nuestros proyectos, así que para\nlograr eso necesitamos consumir la API de GraphQL de Github. Pensemos esto\n`}<em parentName=\"p\">{`Gatsby style`}</em>{` como veníamos pensando con los plugins, necesitamos entonces:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`Una `}<strong parentName=\"li\">{`fuente de datos`}</strong>{` (`}<em parentName=\"li\">{`source`}</em>{`) que van a ser `}<strong parentName=\"li\">{`nuestros proyectos`}</strong>{`, la\ncual vamos a exponer por medio de un plugin de tipo `}<em parentName=\"li\">{`source`}</em>{`.`}</li>\n      <li parentName=\"ul\">{`El mismo plugin se encarga de traernos en un JSON todo preparadito con el\ntexto incluyendo la data que nosotros elijamos 😜, así que no sería necesario\n`}<strong parentName=\"li\">{`transformar`}</strong>{` (`}<em parentName=\"li\">{`transform`}</em>{`) esa data.`}</li>\n      <li parentName=\"ul\">{`Una vez que esté todo hecho y configurado, vamos a poder `}<strong parentName=\"li\">{`usar`}</strong>{` esa data en\nel frontend consultándola por medio de `}<code parentName=\"li\" {...{\n          \"className\": \"language-text\"\n        }}>{`GraphQL`}</code>{`.`}</li>\n    </ul>\n    <p>{`Vamos a buscar un plugin de tipo source para lo que necesitamos, entremos en la\nsección de `}<a parentName=\"p\" {...{\n        \"href\": \"https://www.gatsbyjs.org/plugins/\"\n      }}>{`plugins de Gatsby`}</a>{` y busquemos en\nla barra de la izquierda \"`}<em parentName=\"p\">{`github`}</em>{`\". Vamos a ver que nos sugiere algunas\nopciones pero a nosotros nos interesa\n`}<a parentName=\"p\" {...{\n        \"href\": \"https://www.gatsbyjs.org/packages/gatsby-source-github-api/\"\n      }}><strong parentName=\"a\">{`gatsby-source-github-api`}</strong></a>{`,\nasí que hagamos click en ese y empecemos a leer la docu (les recomiendo\n`}<strong parentName=\"p\">{`SIEMPRE`}</strong>{` leer la documentación, de todo lo que usen jaja 😉). Si leemos la\ndescripción, vemos que es exactamente lo que necesitamos, así que vamos a\ninstalarlo:`}</p>\n    <p>{`Vayamos a la consola y en el root de nuestro proyecto (`}<em parentName=\"p\">{`si tenemos el servidor\nlocal de Gatsby, lo frenamos con `}<code parentName=\"em\" {...{\n          \"className\": \"language-text\"\n        }}>{`Ctrl + C`}</code></em>{`) y tipeemos lo siguiente:`}</p>\n    <div {...{\n      \"className\": \"gatsby-highlight\",\n      \"data-language\": \"bash\"\n    }}><pre parentName=\"div\" {...{\n        \"className\": \"language-bash\"\n      }}><code parentName=\"pre\" {...{\n          \"className\": \"language-bash\"\n        }}><span parentName=\"code\" {...{\n            \"className\": \"token function\"\n          }}>{`npm`}</span>{` i gatsby-source-api`}</code></pre></div>\n    <p>{`Mientras se instala, sigamos leyendo la docu.`}</p>\n    <p>{`Veremos que lo primero que dice es que vamos a necesitar un `}<code parentName=\"p\" {...{\n        \"className\": \"language-text\"\n      }}>{`token`}</code>{` para poder\nconsumir la API de GraphQL de Github, así que vamos a www.github.com y, si\nestamos \"logueados\", hacemos click en nuestro avatar en la esquina superior\nderecha y en el menú seleccionamos la opción `}<strong parentName=\"p\">{`Settings`}</strong>{`. Luego en las opciones\nvamos a la que debería ser la última, `}<strong parentName=\"p\">{`Developer settings`}</strong>{`, luego `}<strong parentName=\"p\">{`Personal\naccess tokens`}</strong>{` donde vamos a ver algo así (si es que tenemos alguna generada)`}</p>\n    <Image imgName=\"tokens.png\" alt=\"Personal access tokens\" mdxType=\"Image\" />\n    <p>{`Como tenemos que generar una nueva para nuestra interacción con el plugin,\ntenemos que hacer click en el botón `}<strong parentName=\"p\">{`Generate new token`}</strong>{`. Acá Github nos va a\nrecibir con una linda tabla llena de checkboxes pero no se preocupen, es por su\nbien 😌. En el input vamos a poner algo descriptivo sobre para qué es este\ntoken, por ejemplo, `}<em parentName=\"p\">{`Portfolio personal`}</em>{`.`}</p>\n    <p>{`Luego debemos elegir a qué cosas podemos acceder con este token, y ya que\nsolamente nos interesa leer datos, seleccionemos algunos que sean `}<strong parentName=\"p\">{`read`}</strong>{`. En\nnuestro caso con seleccionar las opciones `}<strong parentName=\"p\">{`public_repo`}</strong>{` y `}<strong parentName=\"p\">{`read:user`}</strong>{` nos\nalcanza. Una vez que seleccionemos esto, vamos abajo de todo a `}<strong parentName=\"p\">{`Generate\ntoken`}</strong>{`.`}</p>\n    <Image imgName=\"token_gen.png\" alt=\"Token generado\" mdxType=\"Image\" />\n    <p><em parentName=\"p\">{`No se gasten en usar ese token que ya lo borré antes de escribir esto por las\ndudas, paranoico yo?`}</em>{` 🤣`}</p>\n    <p>{`Copien y guarden en algún archivo de texto ese token por las dudas, lo digo por\nexperiencia propia jajaja.`}</p>\n    <p>{`Ahora sigamos con la configuración del plugin, nos dice que una vez que tengamos\nel `}<code parentName=\"p\" {...{\n        \"className\": \"language-text\"\n      }}>{`token`}</code>{` y hayamos instalado el plugin, que vayamos a nuestro archivo\n`}<code parentName=\"p\" {...{\n        \"className\": \"language-text\"\n      }}>{`gatsby-config.js`}</code>{` para agregarlo y configurarlo con el siguiente código:`}</p>\n    <div {...{\n      \"className\": \"gatsby-highlight\",\n      \"data-language\": \"javascript\"\n    }}><pre parentName=\"div\" {...{\n        \"className\": \"language-javascript\"\n      }}><code parentName=\"pre\" {...{\n          \"className\": \"language-javascript\"\n        }}><span parentName=\"code\" {...{\n            \"className\": \"token comment\"\n          }}>{`// En gatsby-config.js`}</span>{`\nplugins`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`:`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`[`}</span>{`\n  `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`{`}</span>{`\n    resolve`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`:`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token template-string\"\n          }}><span parentName=\"span\" {...{\n              \"className\": \"token template-punctuation string\"\n            }}>{`\\``}</span><span parentName=\"span\" {...{\n              \"className\": \"token string\"\n            }}>{`gatsby-source-github-api`}</span><span parentName=\"span\" {...{\n              \"className\": \"token template-punctuation string\"\n            }}>{`\\``}</span></span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`,`}</span>{`\n    options`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`:`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`{`}</span>{`\n      `}<span parentName=\"code\" {...{\n            \"className\": \"token comment\"\n          }}>{`// token: el que generamos recién, requerido por la API de GitHub`}</span>{`\n      token`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`:`}</span>{` unaString`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`,`}</span>{`\n\n      `}<span parentName=\"code\" {...{\n            \"className\": \"token comment\"\n          }}>{`// GraphQLquery: con esta query, traemos a nuestro backend lo que`}</span>{`\n      `}<span parentName=\"code\" {...{\n            \"className\": \"token comment\"\n          }}>{`// queremos tener disponible para mostrar en nuestro frontend`}</span>{`\n      graphQLQuery`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`:`}</span>{` otraString`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`,`}</span>{`\n\n      `}<span parentName=\"code\" {...{\n            \"className\": \"token comment\"\n          }}>{`// variables: por si necesitamos utilizar variables en nuestra query,`}</span>{`\n      `}<span parentName=\"code\" {...{\n            \"className\": \"token comment\"\n          }}>{`// no vamos a usarlo así que podemos borrarlo`}</span>{`\n      variables`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`:`}</span>{` algunObject`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`,`}</span>{`\n    `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`}`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`,`}</span>{`\n  `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`}`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`,`}</span>{`\n`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`]`}</span></code></pre></div>\n    <p>{`Entonces hagamos eso, agreguemos a nuestro proyecto el plugin, nos quedaría así:`}</p>\n    <div {...{\n      \"className\": \"gatsby-highlight\",\n      \"data-language\": \"javascript\"\n    }}><pre parentName=\"div\" {...{\n        \"className\": \"language-javascript\"\n      }}><code parentName=\"pre\" {...{\n          \"className\": \"language-javascript\"\n        }}><span parentName=\"code\" {...{\n            \"className\": \"token comment\"\n          }}>{`// En gatsby-config.js`}</span>{`\nplugins`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`:`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`[`}</span>{`\n  `}<span parentName=\"code\" {...{\n            \"className\": \"token comment\"\n          }}>{`/* [...] */`}</span>{`\n  `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`{`}</span>{`\n    resolve`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`:`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token template-string\"\n          }}><span parentName=\"span\" {...{\n              \"className\": \"token template-punctuation string\"\n            }}>{`\\``}</span><span parentName=\"span\" {...{\n              \"className\": \"token string\"\n            }}>{`gatsby-source-github-api`}</span><span parentName=\"span\" {...{\n              \"className\": \"token template-punctuation string\"\n            }}>{`\\``}</span></span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`,`}</span>{`\n    options`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`:`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`{`}</span>{`\n      token`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`:`}</span>{` `}<span parentName=\"code\" {...{\n            \"className\": \"token template-string\"\n          }}><span parentName=\"span\" {...{\n              \"className\": \"token template-punctuation string\"\n            }}>{`\\``}</span><span parentName=\"span\" {...{\n              \"className\": \"token string\"\n            }}>{`079b55830a613c38aff7f4608ef2448d83db9758`}</span><span parentName=\"span\" {...{\n              \"className\": \"token template-punctuation string\"\n            }}>{`\\``}</span></span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`,`}</span>{`\n      graphQLQuery`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`:`}</span>{` otraString`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`,`}</span>{`\n    `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`}`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`,`}</span>{`\n  `}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`}`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`,`}</span>{`\n  `}<span parentName=\"code\" {...{\n            \"className\": \"token comment\"\n          }}>{`/* [...] */`}</span>{`\n`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`]`}</span></code></pre></div>\n    <p><em parentName=\"p\">{`Sí, el token lo escribí a mano porque como dije antes, lo borré y no lo guardé`}</em>{`\n🤦‍♂️`}</p>\n    <p>{`Listo, todo muy lindo, pero ahora, la query?!?!? Cómo la hacemos?`}</p>\n    <p>{`Vayamos a la siguiente sección para aprender algo copado, `}<code parentName=\"p\" {...{\n        \"className\": \"language-text\"\n      }}>{`GraphQL`}</code>{` 🤩`}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}